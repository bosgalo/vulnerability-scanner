package com.github.bosgalo.crawler;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.*;

public class Crawler {

    public Set<String> collectUrls(URL originUrl) {
        Set<String> res = new TreeSet<>();
        res.addAll(grabByUrl(originUrl));
        int offset = res.size();

        res.addAll(collectNewUrls(res));

        while (true) {
            if (res.size() > offset) {
                offset = res.size();
                res.addAll(collectNewUrls(res, offset));
            } else {
                break;
            }
        }
        return res;
    }

    private Set<String> collectNewUrls(Collection<String> urls, int offset) {
        String[] urlArr = urls.toArray(new String[urls.size()]);
        HashSet<String> res = new HashSet<>();
        for (int i = offset; i < urls.size(); i++) {
            try {
                res.addAll(grabByUrl(new URL(urlArr[i])));
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
        return res;
    }

    private Set<String> collectNewUrls(Collection<String> urls) {
        return collectNewUrls(urls, 0);
    }

    private Set<String> grabByUrl(URL url) {
        Connection connect = Jsoup.connect(url.toString());
        Document document = getDocument(connect);

        if (Objects.nonNull(document)) {
            Elements UrlElements = document.select("a[href]");
            Set<String> urls = new HashSet<>();

            for (Element element : UrlElements) {
                String absUrl = element.absUrl("href");
                if (absUrl.contains(url.getProtocol() + "://" + url.getHost())) {
                    urls.add(absUrl);
                }
            }
            return urls;
        }
        return new HashSet<>();
    }

    private Document getDocument(Connection connect) {
        Document document = null;
        try {
            document = connect.get();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return document;
    }
}
